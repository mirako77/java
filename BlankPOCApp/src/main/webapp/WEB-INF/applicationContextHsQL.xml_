<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:p="http://www.springframework.org/schema/p"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:aop="http://www.springframework.org/schema/aop"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- scan de service -->
	<!--  context:component-scan base-package="net.mickanel.services" /-->

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>accueil</value>
				<!-- value>lesExceptions</value -->
			</list>
		</property>
	</bean>

	<!-- Appel fichier prop -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:accueil.properties"/>
	</bean>

	<!-- Pour conversion des dates -->
	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean"/>

	<!-- Acteur -->
	<bean id="Richard" class="net.mickanel.business.ActeurImpl" scope="prototype">
		<property name="nom" value="${user.nom}"></property>
		<property name="prenom" value="${user.prenom}"></property>
	</bean>

	<!-- Acteur par constructeur -->
	<bean id="acteurPrincipale" class="net.mickanel.business.ActeurImpl" scope="prototype">
		<constructor-arg value="de funes"/>
	</bean>

	<!-- Film -->
	<bean id="soupe" class="net.mickanel.business.Film"
		p:titre="La soupe au choux"
		p:dateDeSortie="22-01-2011"
		p:acteurPrincipale-ref="acteurPrincipale">
		<property name="acteursSecondaires">
			<set>
				<bean class="net.mickanel.business.ActeurImpl">
					<property name="nom" value="seagale" />
					<property name="prenom" value="steven" />
				</bean>
			</set>
		</property>
	</bean>

	<bean id="ActeurFactory" class="net.mickanel.business.ActeurFactory"/>
	<bean id="jamesBond" factory-bean="ActeurFactory" factory-method="getDefaultActeur"/>

	<bean id="Bond" class="net.mickanel.business.Film">
		<property name="acteurPrincipale" ref="jamesBond"></property>
		<property name="titre" value="demain ne suffit pas"></property>
	</bean>

	<!--
			DAO - - avec JDBC
	 - ->
	<bean id="acteurDAO" class="net.mickanel.dao.ActeurJDBCDAO">
		<property name="dataSource" ref="ds"></property>
	</bean-->

	<!--
			DAO - - avec Hibernate
	 -->
	<bean id="acteurDAO" class="net.mickanel.dao.ActeurHibernateDAO">
		<property name="sessionFactory" ref="hibSessionFactory"/>
	</bean>

	<!--
			DATASOURCE MySQL utilser
	 -->
	<bean id="ds"
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
		<value>java:comp/env/jdbc/datasource</value>
		</property>
	</bean>

	<!--
			DATASOURCE HSql
	 -->
     <bean id="dsHSql" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      <property name="driverClassName" value="org.hsqldb.jdbcDriver" />
      <property name="url" value="jdbc:hsqldb:file:C:\Users\mrakotomalala\workspace.neon\DemoSpringMVCHib01\mrakoTestDB" />
      <property name="username" value="sa" />
      <property name="password" value="" />
     </bean>

	<!--
		SERVICE
	 -->
	<bean id="acteurService" class="net.mickanel.services.ActeurService">
		<property name="acteurDAO" ref="acteurDAO"></property>
	</bean>

	<!--
		Hibernate - MySQL
	 -->
	 <bean id="hibSessionFactory"
	 	class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="ds" />
		</property>
		<property name="mappingResources">
			<list>
				<value>Acteur.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
	            <prop key="hibernate.show_sql">true</prop>
	            <prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>
	            <prop key="hibernate.cache.provider_class">org.hibernate.cache.HashtableCacheProvider</prop>
	            <prop key="validationQuery">SELECT current date FROM sysibm.sysdummy1</prop>
	            <prop key="hibernate.archive.autodetection">class</prop>
	            <prop key="hibernate.format_sql">true</prop>
	            <!-- prop key="hbm2ddl.auto">create</prop -->
	            <prop key="hbm2ddl.auto">create-drop</prop>
			</props>
		</property>
	</bean>

		<!--
		Hibernate - MySQL
	 -->
	 <bean id="hbnSessionFactoryHsQL"
	 	class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="ds" />
		</property>
		<property name="mappingResources">
			<list>
				<value>Acteur.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
	            <prop key="hibernate.show_sql">true</prop>
	            <prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>
	            <prop key="hibernate.cache.provider_class">org.hibernate.cache.HashtableCacheProvider</prop>
	            <prop key="validationQuery">SELECT current date FROM sysibm.sysdummy1</prop>
	            <prop key="hibernate.archive.autodetection">class</prop>
	            <prop key="hibernate.format_sql">true</prop>
	            <!-- prop key="hbm2ddl.auto">create</prop -->
	            <prop key="hbm2ddl.auto">create-drop</prop>
			</props>
		</property>
	</bean>

	<!--
		Aspect

	 <bean id="DebugAdvice" class="net.mickanel.aop.DebugAdvice"/>
		<aop:config>
		<aop:aspect ref="DebugAdvice">
		<aop:pointcut id="coupe"
			expression="execution(* net.mickanel.services.ActeurService.getActeursList())"/>
		<aop:around
			method="doSomething" pointcut-ref="coupe"/>
		</aop:aspect>
	</aop:config> -->

</beans>
